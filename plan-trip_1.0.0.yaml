openapi: 3.0.1
info:
  title: Plan-Trip
  description: Sök och planera resor med Västtrafik
  version: 1.0.0
  x-ibm-name: plan-trip
servers:
  - url: /
security:
  - UserId: []
paths:
  /journeys:
    get:
      tags:
        - Journeys
      summary: Returns journeys matching the specified search parameters.
      description: "For an origin or destination to be valid, either a gid or a combination of latitude and longitude must be specified. OriginName and destinationName are optional in combination with latitude and longitude.\r\n            \r\nSample request:\r\n            \r\n    GET /journeys?originGid=9021014001760000&destinationGid=9021014003980000\r\n            \r\nor\r\n            \r\n    GET /journeys?originName=Sadelsten,+V%C3%A5rg%C3%A5rda&originLongitude=12.63308&originLatitude=58.028237&destinationLongitude=11.930897&destinationLatitude=57.586085&destinationName=%C3%85sdammsstigen,+427+36+Billdal"
      parameters:
        - name: originGid
          in: query
          description: >-
            The 16-digit Västtrafik gid of the origin location (which could be
            either a stop area (e.g. '9021014001760000'), a stop point (e.g.
            '9022014001760004') or meta-station (e.g. '0000000800000022')).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: originName
          in: query
          description: >-
            The name of the origin location. The maximum length allowed is 256
            characters.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: originLatitude
          in: query
          description: The latitude of the origin location.
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: originLongitude
          in: query
          description: The longitude of the origin location.
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: destinationGid
          in: query
          description: >-
            The 16-digit Västtrafik gid of the destination location (which could
            be either a stop area, stop point or meta-station).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: destinationName
          in: query
          description: >-
            The name of the destination location. The maximum length allowed is
            256 characters.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: destinationLatitude
          in: query
          description: The latitude of the destination location.
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: destinationLongitude
          in: query
          description: The longitude of the destination location.
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: dateTime
          in: query
          description: >-
            The datetime for which to search journeys. Must be specified in RFC
            3339 format or be null which means that the current time on the
            server is used. The related dateTimeRelatesTo parameter specifies if
            the time is related to the arrival or departure.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: dateTimeRelatesTo
          in: query
          description: >-
            Specifies if the datetime is related to the departure or arrival of
            the journey.
          required: false
          style: form
          explode: true
          schema:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Core.Models.DateTimeRelatesToType
        - name: paginationReference
          in: query
          description: Pagination reference from a previous search.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            The number of results to return. Not guaranteed to return the
            specified number of results and usually not more than 7 results.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 10
        - name: transportModes
          in: query
          description: >-
            The transport modes to include when searching for journeys, if none
            specified all transport modes are included.
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: >-
                #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyTransportMode
        - name: transportSubModes
          in: query
          description: >-
            The transport sub modes to include when searching for journeys, if
            none specified all transport sub modes are included. Only supported
            in combination with transportMode 'train'.
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: >-
                #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyTransportSubMode
        - name: onlyDirectConnections
          in: query
          description: Only include direct connections, e.g. journeys with one trip leg.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
        - name: includeNearbyStopAreas
          in: query
          description: >-
            Includes nearby stop areas when searching for a journey to or from a
            stop area or stop point. This means that the search algorithm will
            take additional stop points of other stop areas nearby the given
            start and destination stop area into account. These additional stop
            points are reachable by walk. E.g when true a journey suggestion may
            include a departure access link (initial walking leg) to a stop
            point of a stop area close by the specified origin stop area.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
        - name: viaGid
          in: query
          description: >-
            The 16-digit Västtrafik gid of the via location (which must be a
            stop area).
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: originWalk
          in: query
          description: >-
            Enables/disables using footpaths in the beginning of a trip when
            searching from an address. To fine-tune the minimum and/or maximum
            distance to the next public transport station, provide these values
            separated by comma. The values are expressed in meters. To enable
            walk with a minimum distance of 0 meters and a maximum distance of 3
            kilometers, set the parameter originWalk=1,0,3000. If default
            distances should be used, skip the values, e.g 1,,. This will enable
            walk with the default minimum (0 meters) and the default maximum
            (2000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: destWalk
          in: query
          description: >-
            Enables/disables using footpaths at the end of a trip when searching
            to an address. To fine-tune the minimum and/or maximum distance to
            the next public transport station, provide these values separated by
            comma. The values are expressed in meters. To enable walk with a
            minimum distance of 0 meters and a maximum distance of 3 kilometers,
            set the parameter destWalk=1,0,3000. If default distances should be
            used, skip the values, e.g 1,,. This will enable walk with the
            default minimum (0 meters) and the default maximum (2000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: originBike
          in: query
          description: >-
            Enables/disables using bike paths in the beginning of a trip when
            searching from an address. To fine-tune the minimum and/or maximum
            distance to the next public transport station, provide these values
            separated by comma. The values are expressed in meters. To enable
            bike with a minimum distance of 1000 meters and a maximum distance
            of 5 kilometers, set the parameter originBike=1,1000,5000. If
            default distances should be used, skip the values, e.g 1,,. This
            will enable bike with the default minimum (0 meters) and the default
            maximum (3000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: destBike
          in: query
          description: >-
            Enables/disables using bike paths at the end of a trip when
            searching to an address. To fine-tune the minimum and/or maximum
            distance to the next public transport station, provide these values
            separated by comma. The values are expressed in meters. To enable
            bike with a minimum distance of 1000 meters and a maximum distance
            of 5 kilometers, set the parameter destBike=1,1000,5000. If default
            distances should be used, skip the values, e.g 1,,. This will enable
            bike with the default minimum (0 meters) and the default maximum
            (3000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: totalBike
          in: query
          description: >-
            Enables/disables using bike routes for the whole trip. To fine-tune
            the minimum and/or maximum distance to the next public transport
            station, provide these values separated by comma. The values are
            expressed in meters. To enable bike with a minimum distance of 0
            meters and a maximum distance of 20 kilometers, set the parameter
            totalBike=1,0,20000. If default distances should be used, skip the
            values, e.g 1,,. This will enable bike with the default minimum (0
            meters) and the default maximum (25000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: originCar
          in: query
          description: >-
            Enables/disables using car in the beginning of a trip when searching
            from an address. To fine-tune the minimum and/or maximum distance to
            the next public transport station, provide these values separated by
            comma. The values are expressed in meters. To enable car with a
            minimum distance of 2000 meters and a maximum distance of 7
            kilometers, set the parameter origincar=1,2000,7000. If default
            distances should be used, skip the values, e.g 1,,. This will enable
            car with the default minimum (0 meters) and the default maximum
            (5000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: destCar
          in: query
          description: >-
            Enables/disables using car at the end of a trip when searching to an
            address. To fine-tune the minimum and/or maximum distance to the
            next public transport station, provide these values separated by
            comma. The values are expressed in meters. To enable car with a
            minimum distance of 2000 meters and a maximum distance of 7
            kilometers, set the parameter destCar=1,2000,7000. If default
            distances should be used, skip the values, e.g 1,,. This will enable
            car with the default minimum (0 meters) and the default maximum
            (5000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: originPark
          in: query
          description: >-
            Enables/disables using Park and Ride in the beginning of a trip when
            searching from an address. To fine-tune the minimum and/or maximum
            distance to the next public transport station, provide these values
            separated by comma. The values are expressed in meters. To enable
            Park and Ride with a minimum distance of 3000 meters and a maximum
            distance of 70 kilometers, set the parameter
            originPark=1,3000,70000. If default distances should be used, skip
            the values, e.g 1,,. This will enable Park and Ride with the default
            minimum (2000 meters) and the default maximum (50000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: destPark
          in: query
          description: >-
            Enables/disables using Park and Ride at the end of a trip when
            searching to an address. To fine-tune the minimum and/or maximum
            distance to the next public transport station, provide these values
            separated by comma. The values are expressed in meters. To enable
            Park and Ride with a minimum distance of 3000 meters and a maximum
            distance of 70 kilometers, set the parameter destPark=1,3000,70000.
            If default distances should be used, skip the values, e.g 1,,. This
            will enable Park and Ride with the default minimum (2000 meters) and
            the default maximum (50000 meters).
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: interchangeDurationInMinutes
          in: query
          description: >-
            The minimum number of minutes between arrival and departure for a
            connection to be valid and the trip included in the search results,
            ignoring the default value.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: includeOccupancy
          in: query
          description: Includes occupancy in journey.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: If the search was successfully completed.
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.GetJourneysResponse
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.GetJourneysResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.GetJourneysResponse
        '400':
          description: "If any of the search parameters were invalid.<br />\r\n             The following error codes can be returned:\r\n             2001: Limit must be greater than zero\r\n             2002: Invalid location\r\n             2003: Invalid datetime\r\n             2004: Decoding pagination reference failed\r\n             2005: Invalid transport mode to origin\r\n             2006: Transport sub modes without transport modes\r\n             2007: Invalid origin gid\r\n             2008: Invalid destination gid\r\n             2009: Invalid via gid\r\n             2010: Invalid interchange duration\r\n             2011: Invalid origin walk\r\n             2012: Invalid destination walk\r\n             2013: Invalid origin bike\r\n             2014: Invalid destination bike\r\n             2015: Invalid origin car\r\n             2016: Invalid destination car\r\n             2017: Invalid origin park\r\n             2018: Invalid destination park\r\n             2019: Invalid total bike\r\n             2020: Identical origin and destination\r\n             2021: Origin name exceeds maximum length\r\n             2022: Destination name exceeds maximum length\r\n             5001: Bad service request\r\n             5003: Service error\r\n             6001: Same origin and destination\r\n             6002: Error in date field\r\n             6003: Faulty input\r\n             6004: Unknown arrival station\r\n             6005: Unknown intermediate station\r\n             6006: Unknown departure station\r\n             6007: Unsuccessful search\r\n             6008: Nearby not found\r\n             6009: Incomplete search\r\n             6010: Origin/Destination are too near"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ApiError'
            application/json:
              schema:
                $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ApiError'
            text/json:
              schema:
                $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ApiError'
        '500':
          description: "If an internal server error occurred.<br />\r\n             The following error codes can be returned:\r\n             8001: Unexpected server error"
        '501':
          description: "If a feature or method was not supported by the server.<br />\r\n             The following error codes can be returned:\r\n             8011: Feature is not supported"
        '503':
          description: "If the service is temporarily unavailable.<br />\r\n             The following error codes can be returned:\r\n             8031: Service temporarily unavailable"
  /locations/by-text:
    get:
      tags:
        - Locations
      summary: >-
        Returns locations matching the specified text. Currently only stop
        areas, addresses, points of interest and meta-stations are supported.
      description: "Sample request:\r\n\r\n    GET /locations/by-text?q=brunnsparken&limit=10&offset=0"
      parameters:
        - name: q
          in: query
          description: >-
            The search text (e.g. 'brunn', 'cent' or 'Kungsgatan'). The maximum
            length allowed is 256 characters.
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: types
          in: query
          description: >-
            The location types to include in the response, if none specified all
            locations types are included.
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: >-
                #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LocationByTextType
        - name: limit
          in: query
          description: The number of results to return.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 10
        - name: offset
          in: query
          description: The zero-based start offset of the pagination.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: latitude
          in: query
          description: Search coordinate. Gives priority to geographically closer results.
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Search coordinate. Gives priority to geographically closer results.
          required: false
          style: form
          explode: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: If the search was successfully completed.
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Locations.GetLocationsResponse
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Locations.GetLocationsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Locations.GetLocationsResponse
        '400':
          description: "If the search text, any of the specified types or the pagination properties are invalid.<br />\r\n            The following error codes can be returned:\r\n            3001: Missing query parameter\r\n            3002: Invalid limit and offset values\r\n            3003: Query parameter exceeds maximum length\r\n            5001: Bad service request"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ApiError'
            application/json:
              schema:
                $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ApiError'
            text/json:
              schema:
                $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ApiError'
        '500':
          description: "If an internal server error occurred.<br />\r\n            The following error codes can be returned:\r\n            8001: Unexpected server error"
        '501':
          description: "If a feature or method was not supported by the server.<br />\r\n            The following error codes can be returned:\r\n            8011: Feature is not supported"
        '503':
          description: "If the service is temporarily unavailable.<br />\r\n            The following error codes can be returned:\r\n            8031: Service temporarily unavailable"
components:
  schemas:
    Microsoft.AspNetCore.Mvc.ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    VT.ApiPlaneraResa.Core.Models.DateTimeRelatesToType:
      type: string
      enum:
        - departure
        - arrival
    VT.ApiPlaneraResa.Core.Models.PositionTransportMode:
      type: string
      enum:
        - tram
        - bus
        - ferry
        - train
        - taxi
    VT.ApiPlaneraResa.Web.V4.Models.AgeType:
      type: string
      description: Different types of age types for a product.
      enum:
        - adult
        - youth
        - senior
        - schoolyouth
        - other
    VT.ApiPlaneraResa.Web.V4.Models.ApiError:
      type: object
      properties:
        errorCode:
          type: integer
          description: Error code.
          format: int32
        errorMessage:
          type: string
          description: More detailed description of the error.
          nullable: true
      additionalProperties: false
      description: Information about the error.
    VT.ApiPlaneraResa.Web.V4.Models.AreaType:
      type: string
      description: The type of area for a set of zones.
      enum:
        - none
        - standard
        - mini
        - extra
        - leisure
    VT.ApiPlaneraResa.Web.V4.Models.ArrivalDetailsIncludeType:
      type: string
      description: >-
        The different kinds of detailed information that could be included in a
        get arrival details request.
      enum:
        - servicejourneycalls
        - servicejourneycoordinates
    VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude of this position (WGS84).
          format: double
        longitude:
          type: number
          description: The longitude of this position (WGS84).
          format: double
        elevation:
          type: number
          description: The elevation of this position (WGS84).
          format: double
          nullable: true
        isOnTripLeg:
          type: boolean
          description: The coordinate is on the tripleg.
          nullable: true
        isTripLegStart:
          type: boolean
          description: The coordinate is on the first call of the leg.
          nullable: true
        isTripLegStop:
          type: boolean
          description: The coordinate is on the last call of the leg.
          nullable: true
      additionalProperties: false
      description: Information about the coordinates
    VT.ApiPlaneraResa.Web.V4.Models.DepartureDetailsIncludeType:
      type: string
      description: >-
        The different kinds of detailed information that could be included in a
        get departure details request.
      enum:
        - servicejourneycalls
        - servicejourneycoordinates
        - occupancy
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ArrivalApiModel:
      required:
        - plannedTime
        - stopPoint
      type: object
      properties:
        detailsReference:
          type: string
          description: >-
            A reference that should be used when getting detailed information
            about the journey.
          nullable: true
        serviceJourney:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyApiModel
        stopPoint:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.StopPointApiModel
        plannedTime:
          minLength: 1
          type: string
          description: The planned time of the call in RFC 3339 format.
        estimatedTime:
          type: string
          description: The estimated time of the call in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is EstimatedTime
            if exists, otherwise PlannedTime.
          nullable: true
          readOnly: true
        isCancelled:
          type: boolean
          description: Flag indicating if the departure or arrival is cancelled.
        isPartCancelled:
          type: boolean
          description: Flag indicating if the departure or arrival is partially cancelled.
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ArrivalDetailsApiModel:
      type: object
      properties:
        serviceJourneys:
          type: array
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyDetailsApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.CallDetailsApiModel:
      required:
        - stopPoint
      type: object
      properties:
        stopPoint:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel
        plannedArrivalTime:
          type: string
          description: The planned arrival time for the call in RFC 3339 format.
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time for the call in RFC 3339 format.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time for the call in RFC 3339 format.
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time for the call in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedArrivalTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is
            EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.
          nullable: true
          readOnly: true
        estimatedOtherwisePlannedDepartureTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is
            EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.
          nullable: true
          readOnly: true
        plannedPlatform:
          type: string
          description: The planned platform of the call.
          nullable: true
        estimatedPlatform:
          type: string
          description: The estimated platform of the call.
          nullable: true
        latitude:
          type: number
          description: The latitude of the stop point of the call.
          format: double
          nullable: true
        longitude:
          type: number
          description: The longitude of the stop point of the call.
          format: double
          nullable: true
        index:
          type: string
          description: The index of the stop point of the call.
          nullable: true
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
        isCancelled:
          type: boolean
          description: Flag indicating if the call is cancelled.
        isDepartureCancelled:
          type: boolean
          description: Flag indicating if the departure is cancelled.
          nullable: true
        isArrivalCancelled:
          type: boolean
          description: Flag indicating if the arrival is cancelled.
          nullable: true
      additionalProperties: false
      description: Information about a call on the trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.CoordinateApiModel:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude of this position (WGS84).
          format: double
        longitude:
          type: number
          description: The longitude of this position (WGS84).
          format: double
        elevation:
          type: number
          description: The elevation of this position (WGS84).
          format: double
          nullable: true
      additionalProperties: false
      description: Information about the coordinates
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.DepartureApiModel:
      required:
        - plannedTime
        - stopPoint
      type: object
      properties:
        detailsReference:
          type: string
          description: >-
            A reference that should be used when getting detailed information
            about the journey.
          nullable: true
        serviceJourney:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyApiModel
        stopPoint:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.StopPointApiModel
        plannedTime:
          minLength: 1
          type: string
          description: The planned time of the call in RFC 3339 format.
        estimatedTime:
          type: string
          description: The estimated time of the call in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is EstimatedTime
            if exists, otherwise PlannedTime.
          nullable: true
          readOnly: true
        isCancelled:
          type: boolean
          description: Flag indicating if the departure or arrival is cancelled.
        isPartCancelled:
          type: boolean
          description: Flag indicating if the departure or arrival is partially cancelled.
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.DepartureDetailsApiModel:
      type: object
      properties:
        serviceJourneys:
          type: array
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyDetailsApiModel
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.GetArrivalsResponse:
      type: object
      properties:
        results:
          type: array
          description: The results.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ArrivalApiModel
        pagination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationProperties
        links:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationLinks'
      additionalProperties: false
      description: >-
        The response to a get arrivals request, includes the results and
        pagination information.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.GetDeparturesResponse:
      type: object
      properties:
        results:
          type: array
          description: The results.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.DepartureApiModel
        pagination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationProperties
        links:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationLinks'
      additionalProperties: false
      description: >-
        The response to a get departures request, includes the results and
        pagination information.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.LineApiModel:
      type: object
      properties:
        gid:
          type: string
          description: 16-digit Västtrafik line gid.
          nullable: true
        name:
          type: string
          description: The line name.
          nullable: true
        shortName:
          type: string
          description: The short name of the line, usually 5 characters or less.
          nullable: true
        designation:
          type: string
          description: The designation of the line.
          nullable: true
        backgroundColor:
          type: string
          description: The background color of the line symbol.
          nullable: true
        foregroundColor:
          type: string
          description: The foreground color of the line symbol.
          nullable: true
        borderColor:
          type: string
          description: The border color of the line symbol.
          nullable: true
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        isWheelchairAccessible:
          type: boolean
          description: Flag indicating if the line is wheelchair accessible.
      additionalProperties: false
      description: Information about a line of a departure or arrival service journey.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.LineDetailsApiModel:
      type: object
      properties:
        name:
          type: string
          description: The line name.
          nullable: true
        backgroundColor:
          type: string
          description: The background color of the line symbol.
          nullable: true
        foregroundColor:
          type: string
          description: The foreground color of the line symbol.
          nullable: true
        borderColor:
          type: string
          description: The border color of the line symbol.
          nullable: true
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
      additionalProperties: false
      description: Information about a line.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyApiModel:
      required:
        - gid
      type: object
      properties:
        gid:
          minLength: 1
          type: string
          description: 16-digit Västtrafik service journey gid.
        origin:
          type: string
          description: A description of the origin.
          nullable: true
        direction:
          type: string
          description: A description of the direction.
          nullable: true
        directionDetails:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DirectionDetailsApiModel
        line:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.LineApiModel
      additionalProperties: false
      description: Information about a service journey of a departure or arrival.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyDetailsApiModel:
      type: object
      properties:
        gid:
          type: string
          description: 16-digit Västtrafik service journey gid.
          nullable: true
        direction:
          type: string
          description: A description of the direction.
          nullable: true
        directionDetails:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DirectionDetailsApiModel
        line:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.LineDetailsApiModel
        serviceJourneyCoordinates:
          type: array
          description: The coordinates of the service journey.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.CoordinateApiModel
        callsOnServiceJourney:
          type: array
          description: All calls on the service journey.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.CallDetailsApiModel
      additionalProperties: false
      description: Information about a service journey.
    VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.StopPointApiModel:
      required:
        - gid
        - name
      type: object
      properties:
        gid:
          minLength: 1
          type: string
          description: The 16-digit Västtrafik gid of the stop point.
        name:
          minLength: 1
          type: string
          description: The stop point name.
        platform:
          type: string
          description: The platform of the stop point.
          nullable: true
        latitude:
          type: number
          description: The latitude coordinate of the stop point
          format: double
          nullable: true
        longitude:
          type: number
          description: The logitude coordinate of the stop point
          format: double
          nullable: true
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.DirectionDetailsApiModel:
      type: object
      properties:
        fullDirection:
          type: string
          description: The original direction string.
          nullable: true
        shortDirection:
          type: string
          description: >-
            The direction string after parsing and removing the different
            components.
          nullable: true
        replaces:
          type: string
          description: >-
            The name of the replaced line, if any. Parses and replaces the
            following component: ", Ersätter [replaces]"
          nullable: true
        via:
          type: string
          description: >-
            The name of the via location, if any. Parses and replaces the
            following component: ", via [via]"
          nullable: true
        isFreeService:
          type: boolean
          description: >-
            Whether the service is free. Parses and replaces the following
            component: ", Fri resa"
          nullable: true
        isPaidService:
          type: boolean
          description: >-
            Whether the service is paid. Parses and replaces the following
            component: ", Avgiftsbelagd tur"
          nullable: true
        isSwimmingService:
          type: boolean
          description: >-
            Whether the service is a swimming service. Parses and replaces the
            following component: ", Badbuss"
          nullable: true
        isDirectDestinationBus:
          type: boolean
          description: >-
            Whether the service is a direct destination bus. Parses and replaces
            the following component: ", Direktbuss"
          nullable: true
        isFrontEntry:
          type: boolean
          description: >-
            Whether the service has front entry. Parses and replaces the
            following component: ", Påstigning fram"
          nullable: true
        isExtraBus:
          type: boolean
          description: >-
            Whether the service is an extra bus. Parses and replaces the
            following component: ", Extrabuss"
          nullable: true
        isExtraBoat:
          type: boolean
          description: >-
            Whether the service is an extra boat. Parses and replaces the
            following component: ", Extrabåt"
          nullable: true
        isExtraTram:
          type: boolean
          description: >-
            Whether the service is an extra tram. Parses and replaces the
            following component: ", Extravagn"
          nullable: true
      additionalProperties: false
      description: Contains detailed information about a direction and its components.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ArrivalAccessLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel
      additionalProperties: false
      description: >-
        Information about a walk, bike or car link from last public transport
        trip leg to destination.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel:
      required:
        - plannedTime
        - stopPoint
      type: object
      properties:
        stopPoint:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel
        plannedTime:
          minLength: 1
          type: string
          description: The planned time of the call in RFC 3339 format.
        estimatedTime:
          type: string
          description: The estimated time of the call in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is EstimatedTime
            if exists, otherwise PlannedTime.
          nullable: true
          readOnly: true
        notes:
          type: array
          description: An ordered list (most important first) of notes related to the call.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
      additionalProperties: false
      description: Information about a call on the trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallDetailsApiModel:
      required:
        - stopPoint
      type: object
      properties:
        stopPoint:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel
        plannedArrivalTime:
          type: string
          description: The planned arrival time for the call in RFC 3339 format.
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time for the call in RFC 3339 format.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time for the call in RFC 3339 format.
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time for the call in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedArrivalTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is
            EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.
          nullable: true
          readOnly: true
        estimatedOtherwisePlannedDepartureTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is
            EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.
          nullable: true
          readOnly: true
        plannedPlatform:
          type: string
          description: The planned platform of the call.
          nullable: true
        estimatedPlatform:
          type: string
          description: The estimated platform of the call.
          nullable: true
        latitude:
          type: number
          description: The latitude of the stop point of the call.
          format: double
          nullable: true
        longitude:
          type: number
          description: The longitude of the stop point of the call.
          format: double
          nullable: true
        index:
          type: string
          description: The index of the stop point of the call.
          nullable: true
        isOnTripLeg:
          type: boolean
          description: The call is on the trip leg.
          nullable: true
        isTripLegStart:
          type: boolean
          description: The call is the first on the trip leg.
          nullable: true
        isTripLegStop:
          type: boolean
          description: The call is the last on the trip leg.
          nullable: true
        tariffZones:
          type: array
          description: "The primary tariff zone of the call. A call can be related to a stop area with multiple tariff zones\r\nand this is the zone that for example should be displayed in overviews etc."
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
        isCancelled:
          type: boolean
          description: Flag indicating if the call is cancelled.
        isDepartureCancelled:
          type: boolean
          description: Flag indicating if the departure is cancelled.
          nullable: true
        isArrivalCancelled:
          type: boolean
          description: Flag indicating if the arrival is cancelled.
          nullable: true
      additionalProperties: false
      description: Information about a call on the trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ChannelApiModel:
      type: object
      properties:
        id:
          type: integer
          description: The channel id.
          format: int32
        ticketName:
          type: string
          description: "The channel-specific ticket name, set if the channel is configured to override the default\r\nproduct name."
          nullable: true
      additionalProperties: false
      description: Information about a channel related to the ticket suggestion.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ConnectionLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel
        journeyLegIndex:
          type: integer
          description: Index of Leg in Journey
          format: int32
      additionalProperties: false
      description: >-
        Information about a walk, bike or car link between two public transport
        trip legs.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.DepartureAccessLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel
      additionalProperties: false
      description: >-
        Information about a walk, bike or car link from origin to first public
        transport trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.DestinationLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel
      additionalProperties: false
      description: Information about a walk, bike or car link from origin to destination.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ExistingTicketApiModel:
      type: object
      properties:
        id:
          type: string
          description: >-
            An Id for matching this existingTicket with ticketValidityApiModel
            in response.
          nullable: true
        offerSpecification:
          type: string
          description: From TicketSuggestionApiModel
          nullable: true
        timeOfIssue:
          type: string
          description: Must be specified in RFC 3339 format
          nullable: true
        timeOfActivation:
          type: string
          description: Must be specified in RFC 3339 format
          nullable: true
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.JourneyDetailsApiModel:
      type: object
      properties:
        departureAccessLink:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.DepartureAccessLinkApiModel
        tripLegs:
          type: array
          description: Detailed information, including stops, about the trip legs.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TripLegDetailsApiModel
        connectionLinks:
          type: array
          description: >-
            A list of ConnectionLinks between TripLegs, when applicable. The
            internal order of TripLegs and ConnectionLinks is defined by
            Index-property on the objects.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ConnectionLinkApiModel
        arrivalAccessLink:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ArrivalAccessLinkApiModel
        destinationLink:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.DestinationLinkApiModel
        ticketSuggestionsResult:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketSuggestionsResultApiModel
        tariffZones:
          type: array
          description: The tariff zones that the journey traverses.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
      additionalProperties: false
      description: Detailed information about a journey.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LineDetailsApiModel:
      type: object
      properties:
        name:
          type: string
          description: The line name.
          nullable: true
        backgroundColor:
          type: string
          description: The background color of the line symbol.
          nullable: true
        foregroundColor:
          type: string
          description: The foreground color of the line symbol.
          nullable: true
        borderColor:
          type: string
          description: The border color of the line symbol.
          nullable: true
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
      additionalProperties: false
      description: Information about a line.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel:
      required:
        - locationType
        - name
        - plannedTime
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid.
          nullable: true
        name:
          minLength: 1
          type: string
          description: The location name.
        locationType:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LocationType'
        latitude:
          type: number
          description: The WGS84 latitude of the location.
          format: double
          nullable: true
        longitude:
          type: number
          description: The WGS84 longitude of the location.
          format: double
          nullable: true
        plannedTime:
          minLength: 1
          type: string
          description: The planned time in RFC 3339 format.
        estimatedTime:
          type: string
          description: The estimated time in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedTime:
          type: string
          description: >-
            The best known time of the link in RFC 3339 format. Is EstimatedTime
            if exists, otherwise PlannedTime.
          nullable: true
          readOnly: true
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the end
            point.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
      additionalProperties: false
      description: Information about an endpoint on an access link.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel:
      type: object
      properties:
        name:
          type: string
          description: Segment name.
          nullable: true
        maneuver:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LinkSegmentManeuver
        orientation:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LinkSegmentOrientation
        maneuverDescription:
          type: string
          description: Description for the maneuver.
          nullable: true
        distanceInMeters:
          type: integer
          description: Distance for this segment in meter.
          format: int32
          nullable: true
      additionalProperties: false
      description: >-
        Represents a segment of a departure access link, arrival access link or
        destination link.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.PunchConfigurationApiModel:
      type: object
      properties:
        quota:
          type: integer
          description: Punch quota of a single ticket.
          format: int32
          nullable: true
        duration:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.PunchConfigurationDurationApiModel
      additionalProperties: false
      description: Represents punch configuration.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.PunchConfigurationDurationApiModel:
      type: object
      properties:
        unit:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PunchConfigurationDurationUnitApiModel
        amount:
          type: integer
          description: Duration of validity of a single punch.
          format: int32
          nullable: true
      additionalProperties: false
      description: Describes the duration of validity of a single punch.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ServiceJourneyApiModel:
      type: object
      properties:
        gid:
          type: string
          description: >-
            16-digit Västtrafik service journey gid that the trip leg is a part
            of.
          nullable: true
        direction:
          type: string
          description: A description of the direction.
          nullable: true
        directionDetails:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DirectionDetailsApiModel
        line:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LineDetailsApiModel
        serviceJourneyCoordinates:
          type: array
          description: The coordinates on the service journey.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        callsOnServiceJourney:
          type: array
          description: All calls on the service journey.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallDetailsApiModel
      additionalProperties: false
      description: Information about a service journey.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopAreaApiModel:
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid of the stop area.
          nullable: true
        name:
          type: string
          description: The stop area name.
          nullable: true
        latitude:
          type: number
          description: The latitude of the stop point.
          format: double
        longitude:
          type: number
          description: The longitude of the stop point.
          format: double
        tariffZone1:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel
        tariffZone2:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel:
      required:
        - gid
        - name
      type: object
      properties:
        gid:
          minLength: 1
          type: string
          description: The 16-digit Västtrafik gid of the stop point.
        name:
          minLength: 1
          type: string
          description: The stop point name.
        platform:
          type: string
          description: The platform of the stop point.
          nullable: true
        latitude:
          type: number
          description: The latitude coordinate of the stop point.
          format: double
          nullable: true
        longitude:
          type: number
          description: The longitude coordinate of the stop point.
          format: double
          nullable: true
        stopArea:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopAreaApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel:
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid of the tariff zone.
          nullable: true
        name:
          type: string
          description: The name of the tariff zone.
          nullable: true
        number:
          type: integer
          description: The tariff zone number.
          format: int32
        shortName:
          type: string
          description: The short name of the tariff zone.
          nullable: true
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketSuggestionApiModel:
      type: object
      properties:
        productId:
          type: integer
          description: The product id.
          format: int32
        productName:
          type: string
          description: The product name.
          nullable: true
        productType:
          type: integer
          description: The product type.
          format: int32
        travellerCategory:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TravellerCategory
        priceInSek:
          type: number
          description: The product price in SEK.
          format: double
        timeValidity:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TimeValidityApiModel
        timeLimitation:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TimeLimitation'
        saleChannels:
          type: array
          description: A list of the channels that sell the product.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ChannelApiModel
        validZones:
          type: array
          description: A list of the valid zones for the ticket.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ZoneApiModel
        productInstanceType:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.ProductInstanceTypeApiModel
        punchConfiguration:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.PunchConfigurationApiModel
        offerSpecification:
          type: string
          description: Used to get ticket offer.
          nullable: true
        areaType:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.AreaType'
      additionalProperties: false
      description: Information about a ticket suggestion.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketSuggestionsResultApiModel:
      type: object
      properties:
        hasError:
          type: boolean
          description: >-
            Flag indicating that an error occurred while getting ticket
            suggestions.
        ticketSuggestions:
          type: array
          description: Ticket suggestions for a journey.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketSuggestionApiModel
        ticketValidities:
          type: array
          description: >-
            An array with the tickets from the existingTickets-array in the
            post-body. Validity for the journey is indicated for each ticket in
            the array. Included if 'ticketsuggestions' is passed in the includes
            array in the request, otherwise null.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketValidityApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketValidityApiModel:
      type: object
      properties:
        id:
          type: string
          description: The ticket id.
          nullable: true
        isValidForJourney:
          type: boolean
          description: Indicates if the ticket is valid for the journey.
          nullable: true
      additionalProperties: false
      description: Information about ticket validity.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TimeValidityApiModel:
      type: object
      properties:
        type:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TimeValidityType
        amount:
          type: integer
          description: >-
            The amount of the unit specified by the Unit property. Always used
            together with the Unit property.
          format: int32
          nullable: true
        unit:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TimeValidityUnit
        fromDate:
          type: string
          description: "The from date of a date interval specified in RFC 3339 format. Always used together with the\r\nToDate property."
          nullable: true
          example: '2018-11-29'
        toDate:
          type: string
          description: "The to date of a date interval specified in RFC 3339 format. Always used together with the\r\nFromDate property."
          nullable: true
          example: '2018-11-30'
        fromDateTime:
          type: string
          description: "The from time of a datetime interval specified in RFC 3339 format. Always used together with\r\nthe ToDateTime property."
          nullable: true
          example: '2018-11-30T17:07:10+01:00'
        toDateTime:
          type: string
          description: "The to time of a datetime interval specified in RFC 3339 format. Always used together with\r\nthe FromDateTime property."
          nullable: true
          example: '2018-11-30T17:07:10+01:00'
      additionalProperties: false
      description: Information about the time validity of a ticket suggestion.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TripLegDetailsApiModel:
      type: object
      properties:
        serviceJourneys:
          type: array
          description: The service journey for the trip leg.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ServiceJourneyApiModel
        callsOnTripLeg:
          type: array
          description: The calls on the trip leg.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallDetailsApiModel
        tripLegCoordinates:
          type: array
          description: The coordinates for the trip leg.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        tariffZones:
          type: array
          description: The tariff zones that the trip leg traverses.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel
        isCancelled:
          type: boolean
          description: Flag indicating if the trip leg is cancelled.
        isPartCancelled:
          type: boolean
          description: Flag indicating if the trip leg is partially cancelled.
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
        journeyLegIndex:
          type: integer
          description: Index of Leg in Journey
          format: int32
      additionalProperties: false
      description: Detailed information about a Public Transport trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ZoneApiModel:
      type: object
      properties:
        id:
          type: integer
          description: The zone id.
          format: int32
      additionalProperties: false
      description: Information about a zone related to the ticket suggestion.
    VT.ApiPlaneraResa.Web.V4.Models.JourneyDetailsIncludeType:
      type: string
      description: >-
        The different kinds of detailed information that could be included in a
        get journey details request.
      enum:
        - ticketsuggestions
        - triplegcoordinates
        - validzones
        - servicejourneycalls
        - servicejourneycoordinates
        - links
        - occupancy
    VT.ApiPlaneraResa.Web.V4.Models.JourneyTransportMode:
      type: string
      description: A subset of TransportMode
      enum:
        - tram
        - bus
        - ferry
        - train
        - taxi
        - walk
        - bike
        - car
    VT.ApiPlaneraResa.Web.V4.Models.JourneyTransportSubMode:
      type: string
      description: A subset of TransportMode
      enum:
        - vasttagen
        - longdistancetrain
        - regionaltrain
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.ArrivalAccessLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkEndpointApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkSegmentApiModel
      additionalProperties: false
      description: >-
        Information about a walk, bike or car link from last public transport
        trip leg to destination.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel:
      required:
        - plannedTime
        - stopPoint
      type: object
      properties:
        stopPoint:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.StopPointApiModel
        plannedTime:
          minLength: 1
          type: string
          description: The planned time of the call in RFC 3339 format.
        estimatedTime:
          type: string
          description: The estimated time of the call in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedTime:
          type: string
          description: >-
            The best known time of the call in RFC 3339 format. Is EstimatedTime
            if exists, otherwise PlannedTime.
          nullable: true
          readOnly: true
        notes:
          type: array
          description: An ordered list (most important first) of notes related to the call.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
      additionalProperties: false
      description: Information about a call on the trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.ConnectionLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkSegmentApiModel
        journeyLegIndex:
          type: integer
          description: Index of Leg in Journey
          format: int32
      additionalProperties: false
      description: >-
        Information about a walk, bike or car link between two public transport
        trip legs.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.DepartureAccessLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkEndpointApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkSegmentApiModel
      additionalProperties: false
      description: >-
        Information about a walk, bike or car link from origin to first public
        transport trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.DestinationLinkApiModel:
      type: object
      properties:
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkEndpointApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkEndpointApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the
            access link.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        distanceInMeters:
          type: integer
          description: Distance in meters.
          format: int32
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedNumberOfSteps:
          type: integer
          description: >-
            Number of steps based on the distance and an estimated step length
            of 0.65 meters.
          format: int32
          nullable: true
        linkCoordinates:
          type: array
          description: The coordinates for the link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel
        segments:
          type: array
          description: The segments that make up this link.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkSegmentApiModel
      additionalProperties: false
      description: Information about a walk, bike or car link from origin to destination.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.GetJourneysResponse:
      type: object
      properties:
        results:
          type: array
          description: The results.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.JourneyApiModel
        pagination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationProperties
        links:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationLinks'
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.JourneyApiModel:
      type: object
      properties:
        reconstructionReference:
          type: string
          description: >-
            A reference that can be used to reconstruct this journey at a later
            time.
          nullable: true
        detailsReference:
          type: string
          description: >-
            A reference that should be used when getting detailed information
            about the journey.
          nullable: true
        departureAccessLink:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.DepartureAccessLinkApiModel
        tripLegs:
          type: array
          description: "A list of trip legs on a journey, when applicable. A journey has either one or more trip legs or one\r\ndestination link."
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.TripLegApiModel
        connectionLinks:
          type: array
          description: >-
            A list of ConnectionLinks between TripLegs, when applicable. The
            internal order of TripLegs and ConnectionLinks is defined by
            Index-property on the objects.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.ConnectionLinkApiModel
        arrivalAccessLink:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.ArrivalAccessLinkApiModel
        destinationLink:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.DestinationLinkApiModel
        isDeparted:
          type: boolean
          description: Flag indicating if the first trip leg of the journey is departed.
          nullable: true
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
      additionalProperties: false
      description: Information about a journey.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.LineApiModel:
      type: object
      properties:
        name:
          type: string
          description: The line name.
          nullable: true
        backgroundColor:
          type: string
          description: The background color of the line symbol.
          nullable: true
        foregroundColor:
          type: string
          description: The foreground color of the line symbol.
          nullable: true
        borderColor:
          type: string
          description: The border color of the line symbol.
          nullable: true
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
        shortName:
          type: string
          description: The short name of the line, usually 5 characters or less.
          nullable: true
        designation:
          type: string
          description: The designation of the line.
          nullable: true
        isWheelchairAccessible:
          type: boolean
          description: Flag indicating if the line is wheelchair accessible.
      additionalProperties: false
      description: Information about a line.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkEndpointApiModel:
      required:
        - locationType
        - name
        - plannedTime
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid.
          nullable: true
        name:
          minLength: 1
          type: string
          description: The location name.
        locationType:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LocationType'
        latitude:
          type: number
          description: The WGS84 latitude of the location.
          format: double
          nullable: true
        longitude:
          type: number
          description: The WGS84 longitude of the location.
          format: double
          nullable: true
        plannedTime:
          minLength: 1
          type: string
          description: The planned time in RFC 3339 format.
        estimatedTime:
          type: string
          description: The estimated time in RFC 3339 format.
          nullable: true
        estimatedOtherwisePlannedTime:
          type: string
          description: >-
            The best known time of the link in RFC 3339 format. Is EstimatedTime
            if exists, otherwise PlannedTime.
          nullable: true
          readOnly: true
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the end
            point.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
      additionalProperties: false
      description: Information about an endpoint on an access link.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.LinkSegmentApiModel:
      type: object
      properties:
        name:
          type: string
          description: Segment name.
          nullable: true
        maneuver:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LinkSegmentManeuver
        orientation:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LinkSegmentOrientation
        maneuverDescription:
          type: string
          description: Description for the maneuver.
          nullable: true
        distanceInMeters:
          type: integer
          description: Distance for this segment in meter.
          format: int32
          nullable: true
      additionalProperties: false
      description: >-
        Represents a segment of a departure access link, arrival access link or
        destination link.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.ServiceJourneyApiModel:
      required:
        - gid
      type: object
      properties:
        gid:
          minLength: 1
          type: string
          description: 16-digit Västtrafik service journey gid.
        direction:
          type: string
          description: A description of the direction.
          nullable: true
        directionDetails:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DirectionDetailsApiModel
        number:
          type: string
          description: Västtrafik service journey number that the trip leg is a part of.
          nullable: true
        line:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.LineApiModel
      additionalProperties: false
      description: Information about a service journey of a departure or arrival.
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.StopAreaApiModel:
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid of the stop area.
          nullable: true
        name:
          type: string
          description: The stop area name.
          nullable: true
        latitude:
          type: number
          description: The latitude of the stop point.
          format: double
        longitude:
          type: number
          description: The longitude of the stop point.
          format: double
        tariffZone1:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.TariffZoneApiModel
        tariffZone2:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.TariffZoneApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.StopPointApiModel:
      required:
        - gid
        - name
      type: object
      properties:
        gid:
          minLength: 1
          type: string
          description: The 16-digit Västtrafik gid of the stop point.
        name:
          minLength: 1
          type: string
          description: The stop point name.
        platform:
          type: string
          description: The platform of the stop point.
          nullable: true
        latitude:
          type: number
          description: The latitude coordinate of the stop point.
          format: double
          nullable: true
        longitude:
          type: number
          description: The logitude coordinate of the stop point.
          format: double
          nullable: true
        stopArea:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.StopAreaApiModel
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.TariffZoneApiModel:
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid of the tariff zone.
          nullable: true
        name:
          type: string
          description: The name of the tariff zone.
          nullable: true
        number:
          type: integer
          description: The tariff zone number.
          format: int32
        shortName:
          type: string
          description: The short name of the tariff zone.
          nullable: true
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.Journeys.TripLegApiModel:
      required:
        - destination
        - isCancelled
        - origin
      type: object
      properties:
        origin:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel
        destination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.CallApiModel
        isCancelled:
          type: boolean
          description: Flag indicating if the trip leg is cancelled.
        isPartCancelled:
          type: boolean
          description: Flag indicating if the trip leg is partially cancelled.
        serviceJourney:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Journeys.ServiceJourneyApiModel
        notes:
          type: array
          description: >-
            An ordered list (most important first) of notes related to the trip
            leg.
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        estimatedDistanceInMeters:
          type: integer
          description: Estimated distance in meters. Only for transport mode Walk.
          format: int32
          nullable: true
        plannedConnectingTimeInMinutes:
          type: integer
          description: "The planned (according to timetable) connecting time in minutes relative to\r\nthe previous public transport trip leg (if any)."
          format: int32
          nullable: true
        estimatedConnectingTimeInMinutes:
          type: integer
          description: "The estimated (according to real-time data) connecting time in minutes relative to\r\nthe previous public transport trip leg (if any)."
          format: int32
          nullable: true
        isRiskOfMissingConnection:
          type: boolean
          description: "Flag indicating that there is less than 5 minutes margin between arriving at the\r\norigin stop point and the departure from that stop point."
          nullable: true
        plannedDepartureTime:
          type: string
          description: The planned departure time in RFC 3339 format.
          nullable: true
        plannedArrivalTime:
          type: string
          description: The planned arrival time in RFC 3339 format.
          nullable: true
        plannedDurationInMinutes:
          type: integer
          description: The planned duration in minutes.
          format: int32
          nullable: true
        estimatedDepartureTime:
          type: string
          description: The estimated departure time in RFC 3339 format, if available.
          nullable: true
        estimatedArrivalTime:
          type: string
          description: The estimated arrival time in RFC 3339 format, if available.
          nullable: true
        estimatedDurationInMinutes:
          type: integer
          description: The estimated duration in minutes, if available.
          format: int32
          nullable: true
        estimatedOtherwisePlannedArrivalTime:
          type: string
          description: >-
            The best known time of the arrival in RFC 3339 format. Is
            EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.
          nullable: true
          readOnly: true
        estimatedOtherwisePlannedDepartureTime:
          type: string
          description: >-
            The best known time of the departure in RFC 3339 format. Is
            EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.
          nullable: true
          readOnly: true
        occupancy:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel
        journeyLegIndex:
          type: integer
          description: Index of Leg in Journey
          format: int32
      additionalProperties: false
      description: Information about a journey trip leg.
    VT.ApiPlaneraResa.Web.V4.Models.LinkSegmentManeuver:
      type: string
      description: Specifies a maneuver to be executed for a link segment.
      enum:
        - none
        - from
        - to
        - 'on'
        - left
        - right
        - keepleft
        - keepright
        - halfleft
        - halfright
        - keephalfleft
        - keephalfright
        - sharpleft
        - sharpright
        - keepsharpleft
        - keepsharpright
        - straight
        - uturn
        - enter
        - leave
        - enterroundabout
        - stayinroundabout
        - leaveroundabout
        - enterferry
        - leaveferry
        - changehighway
        - checkinferry
        - checkoutferry
        - elevator
        - elevatordown
        - elevatorup
        - escalator
        - escalatordown
        - escalatorup
        - stairs
        - stairsdown
        - stairsup
    VT.ApiPlaneraResa.Web.V4.Models.LinkSegmentOrientation:
      type: string
      description: Specifies an orientation of a link segment.
      enum:
        - unknown
        - north
        - south
        - east
        - west
        - northeast
        - southeast
        - northwest
        - southwest
    VT.ApiPlaneraResa.Web.V4.Models.LocationByCoordinatesType:
      type: string
      description: A subset of LocationType
      enum:
        - stoparea
        - stoppoint
        - pointofinterest
        - metastation
    VT.ApiPlaneraResa.Web.V4.Models.LocationByTextType:
      type: string
      description: A subset of LocationType
      enum:
        - stoparea
        - address
        - pointofinterest
        - metastation
    VT.ApiPlaneraResa.Web.V4.Models.LocationType:
      type: string
      description: Represents the different types of location.
      enum:
        - unknown
        - stoparea
        - stoppoint
        - address
        - pointofinterest
        - metastation
    VT.ApiPlaneraResa.Web.V4.Models.Locations.GetLocationsResponse:
      type: object
      properties:
        results:
          type: array
          description: The results.
          nullable: true
          items:
            $ref: >-
              #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Locations.LocationApiModel
        pagination:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationProperties
        links:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.PaginationLinks'
      additionalProperties: false
      description: >-
        The response to a get locations request, includes the results and
        pagination information.
    VT.ApiPlaneraResa.Web.V4.Models.Locations.LocationApiModel:
      required:
        - locationType
        - name
      type: object
      properties:
        gid:
          type: string
          description: The 16-digit Västtrafik gid.
          nullable: true
        name:
          minLength: 1
          type: string
          description: The location name.
        locationType:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.LocationType'
        latitude:
          type: number
          description: The WGS84 latitude of the location.
          format: double
          nullable: true
        longitude:
          type: number
          description: The WGS84 longitude of the location.
          format: double
          nullable: true
        platform:
          type: string
          description: The location platform, only available for stop points.
          nullable: true
        straightLineDistanceInMeters:
          type: integer
          description: The location straight line distance in meters.
          format: int32
          nullable: true
        hasLocalService:
          type: boolean
          description: "Is \"Närtrafik\" (Local Service) available for the location?\r\nValues are only available for LocationType: StopArea, PointOfInterest and Address.\r\nValues are only available for endpoint: locations/by-text."
          nullable: true
      additionalProperties: false
      description: Information about a location.
    VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel:
      type: object
      properties:
        type:
          type: string
          description: The type of the note.
          nullable: true
        severity:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Severity'
        text:
          type: string
          description: The note message.
          nullable: true
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyLevel'
        source:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationSource
      additionalProperties: false
      description: Contains information about occupancy.
    VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationSource:
      type: string
      description: Represents the source from which the occupancy information originate.
      enum:
        - prediction
        - realtime
    VT.ApiPlaneraResa.Web.V4.Models.OccupancyLevel:
      type: string
      description: Represents a level of occupancy.
      enum:
        - low
        - medium
        - high
        - incomplete
        - missing
        - notpublictransport
    VT.ApiPlaneraResa.Web.V4.Models.PaginationLinks:
      type: object
      properties:
        previous:
          type: string
          description: Link to the previous results page, if available, otherwise null.
          nullable: true
        next:
          type: string
          description: >-
            Link to the next results page, if available, otherwise null. Not
            guaranteed to give a result if called.
          nullable: true
        current:
          type: string
          description: >-
            Link to the current results page, if available, otherwise null. Not
            guaranteed to give a result if called.
          nullable: true
      additionalProperties: false
      description: Pagination navigation links.
    VT.ApiPlaneraResa.Web.V4.Models.PaginationProperties:
      type: object
      properties:
        limit:
          type: integer
          description: The requested number of results.
          format: int32
        offset:
          type: integer
          description: The requested offset in the results array.
          format: int32
        size:
          type: integer
          description: The actual number of returned results.
          format: int32
      additionalProperties: false
      description: Pagination information.
    VT.ApiPlaneraResa.Web.V4.Models.Positions.JourneyPositionApiModel:
      type: object
      properties:
        detailsReference:
          type: string
          description: Journey reference
          nullable: true
        line:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.Positions.LineDetailsApiModel
        notes:
          type: array
          description: Journey notes
          nullable: true
          items:
            $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.NoteApiModel'
        name:
          type: string
          description: Journey name
          nullable: true
        direction:
          type: string
          description: Journey direction
          nullable: true
        directionDetails:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.DirectionDetailsApiModel
        latitude:
          type: number
          description: Current latitude of journey
          format: double
          nullable: true
        longitude:
          type: number
          description: Current longitude of journey
          format: double
          nullable: true
      additionalProperties: false
    VT.ApiPlaneraResa.Web.V4.Models.Positions.LineDetailsApiModel:
      type: object
      properties:
        name:
          type: string
          description: The line name.
          nullable: true
        backgroundColor:
          type: string
          description: The background color of the line symbol.
          nullable: true
        foregroundColor:
          type: string
          description: The foreground color of the line symbol.
          nullable: true
        borderColor:
          type: string
          description: The border color of the line symbol.
          nullable: true
        transportMode:
          $ref: '#/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportMode'
        transportSubMode:
          $ref: >-
            #/components/schemas/VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode
      additionalProperties: false
      description: Information about a line.
    VT.ApiPlaneraResa.Web.V4.Models.ProductInstanceTypeApiModel:
      type: string
      description: >-
        Specifies whether or not the product is dynamically based on the journey
        route.
      enum:
        - static
        - dynamic
    VT.ApiPlaneraResa.Web.V4.Models.PunchConfigurationDurationUnitApiModel:
      type: string
      description: Unit of duration of validity of a single punch.
      enum:
        - hours
    VT.ApiPlaneraResa.Web.V4.Models.Severity:
      type: string
      description: The severity of a message.
      enum:
        - unknown
        - low
        - normal
        - high
    VT.ApiPlaneraResa.Web.V4.Models.TimeLimitation:
      type: string
      description: Represents time limitations for a ticket.
      enum:
        - unknown
        - heltid
        - lagtrafik
        - skolkort04till19
        - skolkort04till22
        - skolkort04till1930
        - fritid100
        - fritidkomplement
        - fritidvardag19till22
        - fritidvardag14till24
        - fritidkvallhelg
        - fritidkvallhelglov
        - fritidjulsommarlov
        - fritidale
    VT.ApiPlaneraResa.Web.V4.Models.TimeValidityType:
      type: string
      description: Different types of time validity.
      enum:
        - unknown
        - amountunit
        - fromtodate
        - fromtodatetime
    VT.ApiPlaneraResa.Web.V4.Models.TimeValidityUnit:
      type: string
      description: >-
        Different types of unit that specifies the amount of the Amount
        property.
      enum:
        - unknown
        - minutes
        - hours
        - days
        - year
        - semester
        - schoolyear
        - unlimited
    VT.ApiPlaneraResa.Web.V4.Models.TransportMode:
      type: string
      description: Represents the different types of transport modes.
      enum:
        - unknown
        - none
        - tram
        - bus
        - ferry
        - train
        - taxi
        - walk
        - bike
        - car
        - teletaxi
    VT.ApiPlaneraResa.Web.V4.Models.TransportSubMode:
      type: string
      description: >-
        Represents the different types of sub transport modes, only applicable
        when using transport mode 'Train'.
      enum:
        - unknown
        - none
        - vasttagen
        - longdistancetrain
        - regionaltrain
    VT.ApiPlaneraResa.Web.V4.Models.TravellerCategory:
      type: string
      description: Different types of traveller category.
      enum:
        - unknown
        - adult
        - youth
    VT.ApiPlaneraResa.Web.V4.Models.ValidTimeIntervalApiModel:
      type: object
      properties:
        validFrom:
          type: string
          description: >-
            The start time of the interval when valid journey information is
            available, specified in RFC 3339 format.
          nullable: true
        validUntil:
          type: string
          description: >-
            The end time of the interval when valid journey information is
            available, specified in RFC 3339 format.
          nullable: true
      additionalProperties: false
      description: >-
        Information specifying the interval when valid journey information is
        available, i.e. when it is possible to search journeys.
  securitySchemes:
    UserId:
      type: apiKey
      x-key-type: client_id
      name: X-IBM-Client-Id
      in: header
x-ibm-configuration:
  cors:
    enabled: true
  type: rest
  phase: realized
  enforced: true
  testable: true
  gateway: datapower-api-gateway
  assembly:
    execute:
      - set-variable:
          version: 2.0.0
          title: Set Access-token
          actions:
            - set: message.headers.authorization
              value: $(api.properties.v-accesstoken)
              type: string
      - invoke:
          backend-type: detect
          header-control:
            type: blocklist
            values: []
          parameter-control:
            type: allowlist
            values: []
          http-version: HTTP/1.1
          timeout: 60
          verb: keep
          chunked-uploads: true
          persistent-connection: true
          cache-response: protocol
          cache-ttl: 900
          stop-on-error: []
          graphql-send-type: detect
          websocket-upgrade: false
          title: Call Västtrafik
          version: 2.0.0
          target-url: $(api.properties.target-url)$(api.operation.path)$(request.search)
  properties:
    target-url:
      value: https://ext-api.vasttrafik.se/pr/v4
      description: The URL of the target service
      encoded: false
    v-accesstoken:
      value: >-
        Bearer
        eyJ4NXQiOiJaV05sTURNNE56SmpZelZrT1dFNU16RTFNalF5TTJaaE5XSm1ORE0zWkRVMk9HRXdOVGxqWVRjNE1tWTNPRGcwWW1JeFlqSTFPVGMzTjJWallqZzRNdyIsImtpZCI6IlpXTmxNRE00TnpKall6VmtPV0U1TXpFMU1qUXlNMlpoTldKbU5ETTNaRFUyT0dFd05UbGpZVGM0TW1ZM09EZzBZbUl4WWpJMU9UYzNOMlZqWWpnNE13X1JTMjU2IiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJMa3d3THVFYWREdGRGc3hnaWN4alNiTjVhWEFhIiwiYXV0IjoiQVBQTElDQVRJT04iLCJiaW5kaW5nX3R5cGUiOiJyZXF1ZXN0IiwiaXNzIjoiaHR0cHM6XC9cL2V4dC1hcGkudmFzdHRyYWZpay5zZVwvdG9rZW4iLCJ0aWVySW5mbyI6eyJVbmxpbWl0ZWQiOnsidGllclF1b3RhVHlwZSI6InJlcXVlc3RDb3VudCIsImdyYXBoUUxNYXhDb21wbGV4aXR5IjowLCJncmFwaFFMTWF4RGVwdGgiOjAsInN0b3BPblF1b3RhUmVhY2giOnRydWUsInNwaWtlQXJyZXN0TGltaXQiOjAsInNwaWtlQXJyZXN0VW5pdCI6bnVsbH19LCJrZXl0eXBlIjoiUFJPRFVDVElPTiIsInN1YnNjcmliZWRBUElzIjpbeyJzdWJzY3JpYmVyVGVuYW50RG9tYWluIjoiY2FyYm9uLnN1cGVyIiwibmFtZSI6ImFwaTAwMTMtcHIiLCJjb250ZXh0IjoiXC9wclwvdjQiLCJwdWJsaXNoZXIiOiJhZG1pbiIsInZlcnNpb24iOiJ2NCIsInN1YnNjcmlwdGlvblRpZXIiOiJVbmxpbWl0ZWQifV0sImF1ZCI6Imh0dHBzOlwvXC9leHQtYXBpLnZhc3R0cmFmaWsuc2UiLCJuYmYiOjE3MjQzMzA0MDksImFwcGxpY2F0aW9uIjp7Im93bmVyIjoiTGt3d0x1RWFkRHRkRnN4Z2ljeGpTYk41YVhBYSIsInRpZXJRdW90YVR5cGUiOm51bGwsInRpZXIiOiJVbmxpbWl0ZWQiLCJuYW1lIjoiUGxhbiBUcmlwIiwiaWQiOjI0OTYsInV1aWQiOiI0NzNjY2JjMC1lZTRiLTRmMzktOWQxMy00ZDMwMmRkMGRkYjcifSwiYXpwIjoiTGt3d0x1RWFkRHRkRnN4Z2ljeGpTYk41YVhBYSIsInNjb3BlIjoiZGVmYXVsdCIsImV4cCI6MTcyNDQxNjgwOSwiaWF0IjoxNzI0MzMwNDA5LCJiaW5kaW5nX3JlZiI6IjQxOGY5OGZiMWY3MDQ0MWI4MDFhN2FlNmVjNDQxNTUxIiwianRpIjoiNjg2NDdiMzQtOTg0ZS00M2JhLWFiYjAtNWY2MGNhMTYzYThmIn0.Fj_GvHqQSjwCDZ1HV754Xa4dFfaukcVWeLXLMeg3RafpMId_5xhU0H-2HGkWJs3zlYWODblb2iCqhT-LsPaORev7hY_Lp23-4xlovaYEH-_SBDAtvWHpc5HwKvufTtCwi6Q4uMGNeSwWAM9yoiJ3cORRIgW03zsofyPOpuJNEp9wXyUUdaniDVWjZLfFGWpHsM8SJ7DEtGH5pUdwI6bFvpGk_KVv08oArFT8WYJEeBrDqWUEkMeYr1c-fSTvXR76zn1fN8ODEvK4vJkGaqPypus6qLLER_9JQJvKsRDglzvwK7Uk0DEZw2XP9jFUoZBp8JVW-LpWD31O5UtDYmln8w
  activity-log:
    enabled: true
    success-content: activity
    error-content: payload
